{"ast":null,"code":"var _class;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./order-details.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./order-details.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { OrderDetailsService } from './order-details.service';\nlet OrderDetailsComponent = (_class = class OrderDetailsComponent {\n  constructor(orderService) {\n    this.orderService = orderService;\n    this.title = 'Order Details';\n    this.orderDetails = [];\n    this.orderToUpdate = {\n      id: null,\n      customerName: '',\n      product: '',\n      quantity: 0,\n      description: ''\n    };\n  }\n  ngOnInit() {\n    this.getOrderDetails();\n  }\n  // Register method\n  register(registerForm) {\n    this.orderService.registerOrder(registerForm.value).subscribe(response => {\n      console.log('Order registered:', response);\n      registerForm.reset();\n      this.getOrderDetails();\n    }, error => {\n      console.error('Error registering order:', error);\n    });\n  }\n  // Get order details\n  getOrderDetails() {\n    this.orderService.getOrders().subscribe(response => {\n      console.log('Fetched orders:', response);\n      this.orderDetails = response;\n    }, error => {\n      console.error('Error fetching orders:', error);\n    });\n  }\n  // Delete order\n  deleteOrder(order) {\n    this.orderService.deleteOrder(order.id).subscribe(resp => {\n      console.log('Order deleted:', resp);\n      this.getOrderDetails();\n    }, error => {\n      console.error('Error deleting order:', error);\n    });\n  }\n  // Edit order\n  edit(order) {\n    this.orderToUpdate = {\n      ...order\n    };\n  }\n  // Update order\n  updateOrder() {\n    this.orderService.updateOrder(this.orderToUpdate).subscribe(response => {\n      console.log('Order updated:', response);\n      this.getOrderDetails();\n    }, error => {\n      console.error('Error updating order:', error);\n    });\n  }\n}, _class.ctorParameters = () => [{\n  type: OrderDetailsService\n}], _class);\nOrderDetailsComponent = __decorate([Component({\n  selector: 'app-order-details-root',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], OrderDetailsComponent);\nexport { OrderDetailsComponent };","map":{"version":3,"mappings":";;;;AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,mBAAmB,QAAQ,yBAAyB;AAOtD,IAAMC,qBAAqB,aAA3B,MAAMA,qBAAqB;EAGhCC,YAAoBC,YAAiC;IAAjC,iBAAY,GAAZA,YAAY;IAFhC,UAAK,GAAG,eAAe;IAQvB,iBAAY,GAAU,EAAE;IACxB,kBAAa,GAAG;MACdC,EAAE,EAAE,IAAI;MACRC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE;KACd;EAbuD;EAExDC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAWA;EACAC,QAAQ,CAACC,YAAoB;IAC3B,IAAI,CAACT,YAAY,CAACU,aAAa,CAACD,YAAY,CAACE,KAAK,CAAC,CAACC,SAAS,CAC1DC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;MAC1CJ,YAAY,CAACO,KAAK,EAAE;MACpB,IAAI,CAACT,eAAe,EAAE;IACxB,CAAC,EACAU,KAAU,IAAI;MACbH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CACF;EACH;EAEA;EACAV,eAAe;IACb,IAAI,CAACP,YAAY,CAACkB,SAAS,EAAE,CAACN,SAAS,CACpCC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;MACxC,IAAI,CAACM,YAAY,GAAGN,QAAQ;IAC9B,CAAC,EACAI,KAAU,IAAI;MACbH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CACF;EACH;EAEA;EACAG,WAAW,CAACC,KAAU;IACpB,IAAI,CAACrB,YAAY,CAACoB,WAAW,CAACC,KAAK,CAACpB,EAAE,CAAC,CAACW,SAAS,CAC9CU,IAAI,IAAI;MACPR,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEO,IAAI,CAAC;MACnC,IAAI,CAACf,eAAe,EAAE;IACxB,CAAC,EACAU,KAAU,IAAI;MACbH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CACF;EACH;EAEA;EACAM,IAAI,CAACF,KAAU;IACb,IAAI,CAACG,aAAa,GAAG;MAAE,GAAGH;IAAK,CAAE;EACnC;EAEA;EACAI,WAAW;IACT,IAAI,CAACzB,YAAY,CAACyB,WAAW,CAAC,IAAI,CAACD,aAAa,CAAC,CAACZ,SAAS,CACxDC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAAC;MACvC,IAAI,CAACN,eAAe,EAAE;IACxB,CAAC,EACAU,KAAU,IAAI;MACbH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CACF;EACH;;;;AA1EWnB,qBAAqB,eALjCF,SAAS,CAAC;EACT8B,QAAQ,EAAE,wBAAwB;EAClCC,8BAA6C;;CAE9C,CAAC,GACW7B,qBAAqB,CA2EjC;SA3EYA,qBAAqB","names":["Component","OrderDetailsService","OrderDetailsComponent","constructor","orderService","id","customerName","product","quantity","description","ngOnInit","getOrderDetails","register","registerForm","registerOrder","value","subscribe","response","console","log","reset","error","getOrders","orderDetails","deleteOrder","order","resp","edit","orderToUpdate","updateOrder","selector","template"],"sourceRoot":"","sources":["C:\\Users\\surav\\OneDrive\\Desktop\\Sprint 2 project\\sprint2 project\\sprint2\\orderdetails\\src\\app\\order-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { OrderDetailsService } from './order-details.service';\n\n@Component({\n  selector: 'app-order-details-root',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.scss']\n})\nexport class OrderDetailsComponent implements OnInit {\n  title = 'Order Details';\n\n  constructor(private orderService: OrderDetailsService) {}\n\n  ngOnInit(): void {\n    this.getOrderDetails();\n  }\n\n  orderDetails: any[] = [];\n  orderToUpdate = {\n    id: null,\n    customerName: '',\n    product: '',\n    quantity: 0,\n    description: ''\n  };\n\n  // Register method\n  register(registerForm: NgForm): void {\n    this.orderService.registerOrder(registerForm.value).subscribe(\n      (response: any) => {\n        console.log('Order registered:', response);\n        registerForm.reset();\n        this.getOrderDetails();\n      },\n      (error: any) => {\n        console.error('Error registering order:', error);\n      }\n    );\n  }\n\n  // Get order details\n  getOrderDetails(): void {\n    this.orderService.getOrders().subscribe(\n      (response: any) => {\n        console.log('Fetched orders:', response);\n        this.orderDetails = response;\n      },\n      (error: any) => {\n        console.error('Error fetching orders:', error);\n      }\n    );\n  }\n\n  // Delete order\n  deleteOrder(order: any): void {\n    this.orderService.deleteOrder(order.id).subscribe(\n      (resp) => {\n        console.log('Order deleted:', resp);\n        this.getOrderDetails();\n      },\n      (error: any) => {\n        console.error('Error deleting order:', error);\n      }\n    );\n  }\n\n  // Edit order\n  edit(order: any): void {\n    this.orderToUpdate = { ...order };\n  }\n\n  // Update order\n  updateOrder(): void {\n    this.orderService.updateOrder(this.orderToUpdate).subscribe(\n      (response: any) => {\n        console.log('Order updated:', response);\n        this.getOrderDetails();\n      },\n      (error: any) => {\n        console.error('Error updating order:', error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}