{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ShopOwnerComponent = class ShopOwnerComponent {\n  constructor(ShopOwnerService) {\n    this.ShopOwnerService = ShopOwnerService;\n    this.ShopOwners = [];\n    this.ShopOwnerToUpdate = {\n      id: null,\n      name: '',\n      shopName: '',\n      contactInfo: ''\n    };\n  }\n  ngOnInit() {\n    this.getShopOwners();\n  }\n  register(registerForm) {\n    this.ShopOwnerService.registerShopOwners(registerForm.value).subscribe(response => {\n      console.log('ShopOwner registered:', response);\n      registerForm.reset();\n      this.getShopOwners();\n    }, error => {\n      console.error('Error registering ShopOwner:', error);\n    });\n  }\n  getShopOwners() {\n    this.ShopOwnerService.getShopOwners().subscribe(response => {\n      this.ShopOwners = response;\n    }, error => {\n      console.error('Error fetching shop owners:', error);\n    });\n  }\n  deleteShopOwner(shopOwner) {\n    this.ShopOwnerService.deleteShopOwners(shopOwner.id).subscribe(response => {\n      console.log('ShopOwner deleted:', response);\n      this.getShopOwners();\n    }, error => {\n      console.error('Error deleting ShopOwner:', error);\n    });\n  }\n  edit(shopOwner) {\n    this.ShopOwnerToUpdate = {\n      ...shopOwner\n    };\n  }\n  updateShopOwner() {\n    this.ShopOwnerService.updateShopOwners(this.ShopOwnerToUpdate).subscribe(response => {\n      console.log('ShopOwner updated:', response);\n      this.getShopOwners();\n    }, error => {\n      console.error('Error updating ShopOwner:', error);\n    });\n  }\n};\nShopOwnerComponent = __decorate([Component({\n  selector: 'app-shop-owner-root',\n  templateUrl: './ShopOwner.component.html',\n  styleUrls: ['./ShopOwner.component.scss']\n})], ShopOwnerComponent);\nexport { ShopOwnerComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAU7BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IATpC,eAAU,GAAU,EAAE;IACtB,sBAAiB,GAAG;MAClBC,EAAE,EAAE,IAAI;MACRC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE;KACd;EAGwD;EAEzDC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,QAAQ,CAACC,YAAoB;IAC3B,IAAI,CAACR,gBAAgB,CAACS,kBAAkB,CAACD,YAAY,CAACE,KAAK,CAAC,CAACC,SAAS,CACnEC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;MAC9CJ,YAAY,CAACO,KAAK,EAAE;MACpB,IAAI,CAACT,aAAa,EAAE;IACtB,CAAC,EACAU,KAAU,IAAI;MACbH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACH;EAEAV,aAAa;IACX,IAAI,CAACN,gBAAgB,CAACM,aAAa,EAAE,CAACK,SAAS,CAC5CC,QAAe,IAAI;MAClB,IAAI,CAACK,UAAU,GAAGL,QAAQ;IAC5B,CAAC,EACAI,KAAU,IAAI;MACbH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CACF;EACH;EAEAE,eAAe,CAACC,SAAc;IAC5B,IAAI,CAACnB,gBAAgB,CAACoB,gBAAgB,CAACD,SAAS,CAAClB,EAAE,CAAC,CAACU,SAAS,CAC3DC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC3C,IAAI,CAACN,aAAa,EAAE;IACtB,CAAC,EACAU,KAAU,IAAI;MACbH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CACF;EACH;EAEAK,IAAI,CAACF,SAAc;IACjB,IAAI,CAACG,iBAAiB,GAAG;MAAE,GAAGH;IAAS,CAAE;EAC3C;EAEAI,eAAe;IACb,IAAI,CAACvB,gBAAgB,CAACwB,gBAAgB,CAAC,IAAI,CAACF,iBAAiB,CAAC,CAACX,SAAS,CACrEC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC3C,IAAI,CAACN,aAAa,EAAE;IACtB,CAAC,EACAU,KAAU,IAAI;MACbH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CACF;EACH;CACD;AAnEYlB,kBAAkB,eAL9BD,SAAS,CAAC;EACT4B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACW7B,kBAAkB,CAmE9B;SAnEYA,kBAAkB","names":["Component","ShopOwnerComponent","constructor","ShopOwnerService","id","name","shopName","contactInfo","ngOnInit","getShopOwners","register","registerForm","registerShopOwners","value","subscribe","response","console","log","reset","error","ShopOwners","deleteShopOwner","shopOwner","deleteShopOwners","edit","ShopOwnerToUpdate","updateShopOwner","updateShopOwners","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\surav\\OneDrive\\Desktop\\ShopOwner (2)\\ShopOwner\\src\\app\\ShopOwner.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ShopOwnerService } from './ShopOwner.service';\n\n@Component({\n  selector: 'app-shop-owner-root',\n  templateUrl: './ShopOwner.component.html',\n  styleUrls: ['./ShopOwner.component.scss'],\n})\nexport class ShopOwnerComponent implements OnInit {\n  ShopOwners: any[] = [];\n  ShopOwnerToUpdate = {\n    id: null,\n    name: '',\n    shopName: '',\n    contactInfo: '',\n  };\n  title: any;\n\n  constructor(private ShopOwnerService: ShopOwnerService) {}\n\n  ngOnInit(): void {\n    this.getShopOwners();\n  }\n\n  register(registerForm: NgForm): void {\n    this.ShopOwnerService.registerShopOwners(registerForm.value).subscribe(\n      (response: any) => {\n        console.log('ShopOwner registered:', response);\n        registerForm.reset();\n        this.getShopOwners();\n      },\n      (error: any) => {\n        console.error('Error registering ShopOwner:', error);\n      }\n    );\n  }\n\n  getShopOwners(): void {\n    this.ShopOwnerService.getShopOwners().subscribe(\n      (response: any[]) => {\n        this.ShopOwners = response;\n      },\n      (error: any) => {\n        console.error('Error fetching shop owners:', error);\n      }\n    );\n  }\n\n  deleteShopOwner(shopOwner: any): void {\n    this.ShopOwnerService.deleteShopOwners(shopOwner.id).subscribe(\n      (response: any) => {\n        console.log('ShopOwner deleted:', response);\n        this.getShopOwners();\n      },\n      (error: any) => {\n        console.error('Error deleting ShopOwner:', error);\n      }\n    );\n  }\n\n  edit(shopOwner: any): void {\n    this.ShopOwnerToUpdate = { ...shopOwner };\n  }\n\n  updateShopOwner(): void {\n    this.ShopOwnerService.updateShopOwners(this.ShopOwnerToUpdate).subscribe(\n      (response: any) => {\n        console.log('ShopOwner updated:', response);\n        this.getShopOwners();\n      },\n      (error: any) => {\n        console.error('Error updating ShopOwner:', error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}