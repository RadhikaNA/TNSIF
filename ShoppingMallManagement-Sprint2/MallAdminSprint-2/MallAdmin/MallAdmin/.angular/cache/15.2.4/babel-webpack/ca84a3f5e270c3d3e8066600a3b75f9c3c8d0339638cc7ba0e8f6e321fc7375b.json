{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ShopOwnerService {\n  constructor(http) {\n    this.http = http;\n    this.API = \"http://localhost:8066\"; // Your API base URL\n  }\n  // Register a new ShopOwner\n  registerShopOwners(shopOwnerData) {\n    return this.http.post(`${this.API}/shopowners`, shopOwnerData);\n  }\n  // Get the list of ShopOwners\n  getShopOwners() {\n    return this.http.get(`${this.API}/shopowners`).pipe(map(response => {\n      // Check if the response contains an array under a property like 'data'\n      if (response && response.data && Array.isArray(response.data)) {\n        return response.data; // Extract the array of shop owners\n      } else {\n        console.error('ShopOwners data is not an array:', response);\n        return []; // Return an empty array if the data is not an array\n      }\n    }));\n  }\n  // Delete a ShopOwner by ID\n  deleteShopOwners(id) {\n    return this.http.delete(`${this.API}/shopowners/${id}`);\n  }\n  // Update a ShopOwner\n  updateShopOwners(shopOwner) {\n    const id = shopOwner.id || shopOwner.id;\n    return this.http.put(`${this.API}/shopowners/${id}`, shopOwner);\n  }\n}\nShopOwnerService.ɵfac = function ShopOwnerService_Factory(t) {\n  return new (t || ShopOwnerService)(i0.ɵɵinject(i1.HttpClient));\n};\nShopOwnerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShopOwnerService,\n  factory: ShopOwnerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB,QAAG,GAAG,uBAAuB,CAAC,CAAC;EAGQ;EAEvC;EACOC,kBAAkB,CAACC,aAAkB;IAC1C,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,GAAG,aAAa,EAAEF,aAAa,CAAC;EAChE;EAEA;EACOG,aAAa;IAClB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAM,GAAG,IAAI,CAACF,GAAG,aAAa,CAAC,CAACG,IAAI,CACtDC,GAAG,CAAEC,QAAa,IAAI;MACpB;MACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACC,IAAI,CAAC,EAAE;QAC7D,OAAOD,QAAQ,CAACC,IAAI,CAAC,CAAE;OACxB,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEL,QAAQ,CAAC;QAC3D,OAAO,EAAE,CAAC,CAAE;;IAEhB,CAAC,CAAC,CACH;EACH;EAEA;EACOM,gBAAgB,CAACC,EAAU;IAChC,OAAO,IAAI,CAAChB,IAAI,CAACiB,MAAM,CAAC,GAAG,IAAI,CAACb,GAAG,eAAeY,EAAE,EAAE,CAAC;EACzD;EAEA;EACOE,gBAAgB,CAACC,SAAc;IACpC,MAAMH,EAAE,GAAGG,SAAS,CAACH,EAAE,IAAIG,SAAS,CAACH,EAAE;IACvC,OAAO,IAAI,CAAChB,IAAI,CAACoB,GAAG,CAAC,GAAG,IAAI,CAAChB,GAAG,eAAeY,EAAE,EAAE,EAAEG,SAAS,CAAC;EACjE;;AAnCWrB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAuB,SAAhBvB,gBAAgB;EAAAwB,YAFf;AAAM","names":["ShopOwnerService","constructor","http","registerShopOwners","shopOwnerData","post","API","getShopOwners","get","pipe","map","response","data","Array","isArray","console","error","deleteShopOwners","id","delete","updateShopOwners","shopOwner","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\surav\\OneDrive\\Desktop\\ShopOwner (2)\\ShopOwner\\src\\app\\ShopOwner.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopOwnerService {\n  API = \"http://localhost:8066\"; // Your API base URL\n  updateShopOwners: any;\n\n  constructor(private http: HttpClient) {}\n\n  // Register a new ShopOwner\n  public registerShopOwners(shopOwnerData: any) {\n    return this.http.post(`${this.API}/shopowners`, shopOwnerData); \n  }\n\n  // Get the list of ShopOwners\n  public getShopOwners() {\n    return this.http.get<any>(`${this.API}/shopowners`).pipe(\n      map((response: any) => {\n        // Check if the response contains an array under a property like 'data'\n        if (response && response.data && Array.isArray(response.data)) {\n          return response.data;  // Extract the array of shop owners\n        } else {\n          console.error('ShopOwners data is not an array:', response);\n          return [];  // Return an empty array if the data is not an array\n        }\n      })\n    );\n  }\n\n  // Delete a ShopOwner by ID\n  public deleteShopOwners(id: number) {\n    return this.http.delete(`${this.API}/shopowners/${id}`); \n  }\n\n  // Update a ShopOwner\n  public updateShopOwners(shopOwner: any) {\n    const id = shopOwner.id || shopOwner.id;\n    return this.http.put(`${this.API}/shopowners/${id}`, shopOwner); \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}